{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/study/react_mini_project/member_join_form/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useFormInput from \"../hooks/use-form-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = useFormInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useFormInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useFormInput(value => /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(value));\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const submitHandler = e => {\n    e.preventDefault();\n    if (!enteredFirstName || !enteredLastName || !enteredEmail) {\n      return;\n    }\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n  const firstNameInputClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"D1kGuXd/Q3zt4TAyB+G5d4QlqGo=\", false, function () {\n  return [useFormInput, useFormInput, useFormInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useFormInput","jsxDEV","_jsxDEV","isNotEmpty","value","trim","BasicForm","props","_s","enteredFirstName","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","enteredLastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","test","formIsValid","submitHandler","e","preventDefault","firstNameInputClasses","lastNameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/study/react_mini_project/member_join_form/src/components/BasicForm.js"],"sourcesContent":["import useFormInput from \"../hooks/use-form-input\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst BasicForm = (props) => {\n  const {\n    value : enteredFirstName,\n    isValid : firstNameIsValid,\n    hasError : firstNameHasError,\n    valueChangeHandler : firstNameChangeHandler, \n    inputBlurHandler : firstNameBlurHandler, \n    reset: resetFirstNameInput\n  } = useFormInput(isNotEmpty);\n\n  const {\n    value : enteredLastName,\n    isValid : lastNameIsValid,\n    hasError : lastNameHasError,\n    valueChangeHandler : lastNameChangeHandler, \n    inputBlurHandler : lastNameBlurHandler, \n    reset: resetLastNameInput\n  } = useFormInput(isNotEmpty);\n\n  const {\n    value : enteredEmail,\n    isValid : emailIsValid,\n    hasError : emailHasError,\n    valueChangeHandler : emailChangeHandler, \n    inputBlurHandler : emailBlurHandler, \n    reset: resetEmailInput\n  } = useFormInput((value) =>\n  /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(\n    value\n  ));\n\n\n  let formIsValid = false; \n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = e => {\n    e.preventDefault(); \n    \n    if (!enteredFirstName || !enteredLastName || !enteredEmail) {\n      return;\n    }\n\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  } \n\n  const firstNameInputClasses = firstNameHasError ? \n  'form-control invalid' : 'form-control';\n  const lastNameInputClasses = lastNameHasError ? \n  'form-control invalid' : 'form-control';\n  const emailInputClasses = emailHasError ? \n  'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={firstNameInputClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name'\n          onChange={firstNameChangeHandler}\n          onBlur={firstNameBlurHandler}\n          value={enteredFirstName}\n          />\n          {firstNameHasError && (\n          <p className=\"error-text\">First name must not be empty.</p>\n        )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input type='text' id='name'\n          onChange={lastNameChangeHandler}\n          onBlur={lastNameBlurHandler}\n          value={enteredLastName}\n          />\n          {lastNameHasError && (\n          <p className=\"error-text\">Last name must not be empty.</p>\n        )}\n        </div>\n        <div className={emailInputClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='email' id='email'\n        onChange={emailChangeHandler}\n        onBlur={emailBlurHandler}\n        value={enteredEmail}\n        />\n        {emailHasError && (\n          <p className=\"error-text\">Please enter a valid email.</p>\n        )}\n      </div>\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AAE/C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM;IACJJ,KAAK,EAAGK,gBAAgB;IACxBC,OAAO,EAAGC,gBAAgB;IAC1BC,QAAQ,EAAGC,iBAAiB;IAC5BC,kBAAkB,EAAGC,sBAAsB;IAC3CC,gBAAgB,EAAGC,oBAAoB;IACvCC,KAAK,EAAEC;EACT,CAAC,GAAGnB,YAAY,CAACG,UAAU,CAAC;EAE5B,MAAM;IACJC,KAAK,EAAGgB,eAAe;IACvBV,OAAO,EAAGW,eAAe;IACzBT,QAAQ,EAAGU,gBAAgB;IAC3BR,kBAAkB,EAAGS,qBAAqB;IAC1CP,gBAAgB,EAAGQ,mBAAmB;IACtCN,KAAK,EAAEO;EACT,CAAC,GAAGzB,YAAY,CAACG,UAAU,CAAC;EAE5B,MAAM;IACJC,KAAK,EAAGsB,YAAY;IACpBhB,OAAO,EAAGiB,YAAY;IACtBf,QAAQ,EAAGgB,aAAa;IACxBd,kBAAkB,EAAGe,kBAAkB;IACvCb,gBAAgB,EAAGc,gBAAgB;IACnCZ,KAAK,EAAEa;EACT,CAAC,GAAG/B,YAAY,CAAEI,KAAK,IACvB,oFAAoF,CAAC4B,IAAI,CACvF5B,KACF,CAAC,CAAC;EAGF,IAAI6B,WAAW,GAAG,KAAK;EAEvB,IAAItB,gBAAgB,IAAIU,eAAe,IAAIM,YAAY,EAAE;IACvDM,WAAW,GAAG,IAAI;EACpB;EAEA,MAAMC,aAAa,GAAGC,CAAC,IAAI;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC3B,gBAAgB,IAAI,CAACW,eAAe,IAAI,CAACM,YAAY,EAAE;MAC1D;IACF;IAEAP,mBAAmB,CAAC,CAAC;IACrBM,kBAAkB,CAAC,CAAC;IACpBM,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAMM,qBAAqB,GAAGxB,iBAAiB,GAC/C,sBAAsB,GAAG,cAAc;EACvC,MAAMyB,oBAAoB,GAAGhB,gBAAgB,GAC7C,sBAAsB,GAAG,cAAc;EACvC,MAAMiB,iBAAiB,GAAGX,aAAa,GACvC,sBAAsB,GAAG,cAAc;EAEvC,oBACE1B,OAAA;IAAMsC,QAAQ,EAAEN,aAAc;IAAAO,QAAA,gBAC5BvC,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BvC,OAAA;QAAKwC,SAAS,EAAEL,qBAAsB;QAAAI,QAAA,gBACpCvC,OAAA;UAAOyC,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxC7C,OAAA;UAAO8C,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,MAAM;UAC5BC,QAAQ,EAAEnC,sBAAuB;UACjCoC,MAAM,EAAElC,oBAAqB;UAC7Bb,KAAK,EAAEK;QAAiB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,EACDlC,iBAAiB,iBAClBX,OAAA;UAAGwC,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAA6B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACN7C,OAAA;QAAKwC,SAAS,EAAEJ,oBAAqB;QAAAG,QAAA,gBACnCvC,OAAA;UAAOyC,OAAO,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvC7C,OAAA;UAAO8C,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,MAAM;UAC5BC,QAAQ,EAAE3B,qBAAsB;UAChC4B,MAAM,EAAE3B,mBAAoB;UAC5BpB,KAAK,EAAEgB;QAAgB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,EACDzB,gBAAgB,iBACjBpB,OAAA;UAAGwC,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAA4B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACN7C,OAAA;QAAKwC,SAAS,EAAEH,iBAAkB;QAAAE,QAAA,gBAClCvC,OAAA;UAAOyC,OAAO,EAAC,OAAO;UAAAF,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7C7C,OAAA;UAAO8C,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAC9BC,QAAQ,EAAErB,kBAAmB;UAC7BsB,MAAM,EAAErB,gBAAiB;UACzB1B,KAAK,EAAEsB;QAAa;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EACDnB,aAAa,iBACZ1B,OAAA;UAAGwC,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAA2B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACzD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7C,OAAA;MAAKwC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BvC,OAAA;QAAQkD,QAAQ,EAAE,CAACnB,WAAY;QAAAQ,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACvC,EAAA,CAnGIF,SAAS;EAAA,QAQTN,YAAY,EASZA,YAAY,EASZA,YAAY;AAAA;AAAAqD,EAAA,GA1BZ/C,SAAS;AAqGf,eAAeA,SAAS;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}