{"ast":null,"code":"var _jsxFileName = \"/Users/zenghyun/Desktop/frontend/study/react_mini_project/8. mutilple_board_page/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),{\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","ok","message","status","resData","events","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/Users/zenghyun/Desktop/frontend/study/react_mini_project/8. mutilple_board_page/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect, defer } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nfunction EventDetailPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n\n  return <EventItem event={data.event} />;\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n    if (!response.ok) {\n      throw json(\n        { message: \"Could not fetch details for selected event.\" },\n        {\n          status: 500,\n        }\n      );\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch(\"http://localhost:8080/events\");\n  \n    if (!response.ok) {\n      // return { isError: true, message: 'Could not fetch events.' };\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.'}),{\n      //   status: 500,\n      // });\n      throw json(\n        { message: \"Could not fetch events\" },\n        {\n          status: 500,\n        }\n      );\n    } else {\n      const resData = await response.json();\n      return resData.events;\n    }\n  }\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n return defer({\n    event: loadEvent(id), \n    events: loadEvents()\n })\n}\n\nexport async function action({ params, request }) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method,\n  });\n  if (!response.ok) {\n    throw json(\n      {\n        message: \"Could not delete event.\",\n      },\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect('/events');\n}\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAC5E,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGT,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOM,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACN,EAAA,CAJQD,eAAe;EAAA,QACTP,kBAAkB;AAAA;AAAAe,EAAA,GADxBR,eAAe;AAMxB,eAAeA,eAAe;AAE9B,eAAeS,SAASA,CAACC,EAAE,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACH,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACjB,IAAI,CAAC,CAAC;IACrC,OAAOsB,OAAO,CAACC,MAAM;EACzB;AACJ;AAEA,eAAeC,UAAUA,CAAA,EAAG;EACxB,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMnB,IAAI,CACR;MAAEoB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACjB,IAAI,CAAC,CAAC;IACrC,OAAOsB,OAAO,CAACC,MAAM;EACvB;AACF;AAEF,OAAO,eAAeE,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMV,EAAE,GAAGY,MAAM,CAACC,OAAO;EAE1B,OAAO3B,KAAK,CAAC;IACVO,KAAK,EAAEM,SAAS,CAACC,EAAE,CAAC;IACpBO,MAAM,EAAEC,UAAU,CAAC;EACtB,CAAC,CAAC;AACH;AAEA,OAAO,eAAeM,MAAMA,CAAAC,KAAA,EAAsB;EAAA,IAArB;IAAEH,MAAM;IAAED;EAAQ,CAAC,GAAAI,KAAA;EAC9C,MAAMF,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGW,OAAO,EAAE;IACtEG,MAAM,EAAEL,OAAO,CAACK;EAClB,CAAC,CAAC;EACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMnB,IAAI,CACR;MACEoB,OAAO,EAAE;IACX,CAAC,EACD;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH;EACA,OAAOpB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAa,EAAA;AAAAmB,YAAA,CAAAnB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}